# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: nuget push

on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

  release:
    types: [published]

  workflow_dispatch:
  #  inputs:
  #    run_build:
  #      type: boolean
  #      default: true
  #      required: false

env:
  push_source: 'SatorImaging.DotnetTool.StaticImport/bin/Release/*.nupkg'
  test_project: '--project SatorImaging.DotnetTool.StaticImport'

jobs:
  nuget:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '10.0.x' ]

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        ##cache: true
    
    - name: Restore dependencies
      run: |
        #cd src
        dotnet restore
    
    # TODO
    - run: dotnet run -f net8.0 ${{ env.test_project }} -- --TEST
    - run: dotnet run -f net9.0 ${{ env.test_project }} -- --TEST
    - run: dotnet run -f net10.0 ${{ env.test_project }} -- --TEST
    
    - name: Pack
      run: |
        #cd src

        # required to enable deterministic build --> -p:ContinuousIntegrationBuild=true
        # it seems that hash is calculated based on the whole git directory contents
        # ex: including github actions yaml files
        dotnet pack -c Release --no-restore  -p:ContinuousIntegrationBuild=true

    - name: NuGet push
      run: |
        #ls -R
        #cd src

        dotnet nuget push "${{ env.push_source  }}"  \
          -k ${{ secrets.NUGET_API_KEY }}  \
          -s https://api.nuget.org/v3/index.json \
          --timeout 60
